name: Deploy with Self Hosted Runner

on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        default: 'dev-cd'

jobs:

  create_runner:
    runs-on: ubuntu-22.04
    
    environment: ${{ inputs.environment }}
    
    permissions:
      id-token: write
    
    outputs:
      runner_name: ${{ steps.create_github_runner.outputs.runner_name }}
    
    steps:
      - name: Create GitHub Runner
        id: create_github_runner
        uses: pagopa/eng-github-actions-iac-template/azure/github-self-hosted-runner-azure-create-action@main
        with:
          client_id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          container_app_environment_name: ${{ secrets.AZURE_CONTAINER_APP_ENVIRONMENT_NAME }}
          resource_group_name: ${{ secrets.AZURE_RESOURCE_GROUP_NAME }}
          pat_token: ${{ secrets.GIT_PAT }}


  deploy:
    runs-on: [self-hosted, "${{ needs.create_runner.outputs.runner_name }}"]
    
    environment: ${{ inputs.environment }}
    
    permissions:
      id-token: write

    needs: create_runner
    
    steps:
      #
      # Checkout the source code.
      #
      - name: Checkout the source code
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
        with:
          token: ${{ secrets.GIT_PAT }}
          fetch-depth: 0

      #
      # Login to Azure.
      #
      - name: Login to Azure
        uses: azure/login@92a5484dfaf04ca78a94597f4f19fea633851fa2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
 
      #
      # Upload files.
      #
      - name: Upload configuration files for acquirers 
        run: |
          az config set defaults.group=${{ secrets.AZURE_STORAGE_ACCOUNT_GROUP }} --local
          az storage container delete -n acquirers --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }} --auth-mode login
          az storage container create -n acquirers --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }} --public-access blob --auth-mode login 
          az storage blob upload-batch --destination acquirers --destination-path / --source src/main/conf/acquirers --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }} --auth-mode login
          
          #az storage container delete -n test --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }} --auth-mode login
          #az storage container create -n test --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }} --auth-mode login --public-access blob --resource-group mil-d-data-rg
          #az storage blob upload-batch --destination test --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }} --destination-path / --source src/main/conf/clients --auth-mode key

      - name: Upload configuration files for authentication
        run: |
          az config set defaults.group=${{ secrets.AZURE_STORAGE_ACCOUNT_GROUP }} --local
          az storage container delete -n clients   --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME__AUTH }} --auth-mode login
          az storage container delete -n roles     --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME__AUTH }} --auth-mode login
          az storage container delete -n users     --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME__AUTH }} --auth-mode login
          az storage container create -n clients   --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME__AUTH }} --auth-mode login --public-access blob
          az storage container create -n roles     --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME__AUTH }} --auth-mode login --public-access blob
          az storage container create -n users     --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME__AUTH }} --auth-mode login --public-access blob
          az storage blob upload-batch --destination clients   --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }} --destination-path / --source src/main/conf/clients --auth-mode login
          az storage blob upload-batch --destination roles     --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }} --destination-path / --source src/main/conf/roles   --auth-mode login
          az storage blob upload-batch --destination users     --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }} --destination-path / --source src/main/conf/users   --auth-mode login


  cleanup_runner:
    if: always()
    
    runs-on: ubuntu-22.04
    
    environment: ${{ inputs.environment }}
    
    permissions:
      id-token: write
    
    needs: [create_runner, deploy]
    
    steps:
      - name: Cleanup GitHub Runner
        uses: pagopa/eng-github-actions-iac-template/azure/github-self-hosted-runner-azure-cleanup-action@0ee2f58fd46d10ac7f00bce4304b98db3dbdbe9a
        with:
          client_id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resource_group_name: ${{ secrets.AZURE_RESOURCE_GROUP_NAME }}
          runner_name: ${{ needs.create_runner.outputs.runner_name }}
          pat_token: ${{ secrets.GIT_PAT }}
